{"version":3,"sources":["../../../src/components/clusters/clusterConfig.js"],"names":["slugify","str","slug","replace","_","appEvents","angular","ClusterConfigCtrl","$scope","$injector","backendSrv","$q","contextSrv","$location","$window","alertSrv","self","isOrgEditor","hasRole","cluster","type","pageReady","prometheusDeployed","showHelp","document","title","getDatasources","then","promises","search","push","getCluster","getDeployments","forEach","ds","items","deployment","metadata","name","getPrometheusDatasources","all","id","get","jsonData","result","datasources","filter","request","url","method","headers","saveDatasource","set","catch","err","cm","generateConfigMap","saveToFile","generateKubestateConfigMap","daemonSet","kubestate","filename","json","blob","Blob","toJson","wnd","window","saveAs","question","emit","text","yesText","icon","onConfirm","saveAndDeploy","undeployPrometheus","put","post","deployPrometheus","task","cloneDeep","snapTask","workflow","collect","publish","config","prefix","port","server","cadvisor_task","snapCadvisorTask","configMap","data","JSON","stringify","kubestateSnapTask","kubestateConfigMap","kubestateCm","checkApiVersion","createConfigMap","createDaemonSet","createDeployment","updateSnapSettings","deleteConfigMap","deleteDaemonSet","deleteDeployment","deletePods","clusterId","resources","length","deploymentName","cmName","pods","pod","service","history","back","generatePrometheusConfigMap","kubestateDeployment","nodeExporterDaemonSet","createService","nodeExporterService","prometheusDeployment","deleteService","templateUrl","raintankSnapImage","initialDelaySeconds","NodeExporterImage","prometheusImage","kubestateImage"],"mappings":"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","file":"clusterConfig.js","sourcesContent":["import _ from 'lodash';\nimport appEvents from 'app/core/app_events';\nimport angular from 'angular';\n\nfunction slugify(str) {\n  var slug = str.replace(\"@\", \"at\").replace(\"&\", \"and\").replace(/[.]/g, \"_\").replace(\"/\\W+/\", \"\");\n  return slug;\n}\n\nexport class ClusterConfigCtrl {\n  /** @ngInject */\n  constructor($scope, $injector, backendSrv, $q, contextSrv, $location, $window, alertSrv) {\n    var self = this;\n    this.$q = $q;\n    this.backendSrv = backendSrv;\n    this.isOrgEditor = contextSrv.hasRole('Editor') || contextSrv.hasRole('Admin');\n    this.$window = $window;\n    this.$location = $location;\n    this.cluster = {\n      type: 'raintank-kubernetes-datasource'\n    };\n    this.pageReady = false;\n    this.prometheusDeployed = false;\n    this.alertSrv = alertSrv;\n    this.showHelp = false;\n    document.title = 'Grafana Kubernetes App';\n\n    this.getDatasources().then(() => {\n      self.pageReady = true;\n    });\n  }\n\n  toggleHelp() {\n    this.showHelp = !this.showHelp;\n  }\n\n  getDatasources() {\n    var self = this;\n    var promises = [];\n    if (\"cluster\" in self.$location.search()) {\n      promises.push(self.getCluster(this.$location.search().cluster).then(() => {\n        return self.getDeployments().then(ds => {\n          _.forEach(ds.items, function (deployment) {\n            if (deployment.metadata.name === \"prometheus-deployment\") {\n              self.prometheusDeployed = true;\n            }\n          });\n        });\n      }));\n    }\n\n    promises.push(self.getPrometheusDatasources());\n\n    return this.$q.all(promises);\n  }\n\n  getCluster(id) {\n    var self = this;\n    return this.backendSrv.get('/api/datasources/' + id)\n      .then((ds) => {\n        if (!(ds.jsonData.ds)) {\n          ds.jsonData.ds = \"\";\n        }\n        self.cluster = ds;\n      });\n  }\n\n  getPrometheusDatasources() {\n    var self = this;\n    return this.backendSrv.get('/api/datasources')\n      .then((result) => {\n        self.datasources = _.filter(result, {\n          \"type\": \"prometheus\"\n        });\n      });\n  }\n\n  getDeployments() {\n    var self = this;\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + self.cluster.id + '/apis/apps/v1beta2/namespaces/kube-system/deployments',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  save() {\n    return this.saveDatasource()\n      .then(() => {\n        return this.getDatasources();\n      })\n      .then(() => {\n        this.alertSrv.set(\"Saved\", \"Saved and successfully connected to \" + this.cluster.name, 'success', 3000);\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Saved\", \"Saved but failed to connect to \" + this.cluster.name + '. Error: ' + err, 'error', 5000);\n      });\n  }\n\n  saveConfigMapToFile() {\n    const cm = this.generateConfigMap();\n    this.saveToFile('snap-configmap', cm);\n  }\n\n  saveKubestateConfigMapToFile() {\n    const cm = this.generateKubestateConfigMap();\n    this.saveToFile('snap-kubestate-configmap', cm);\n  }\n\n  saveDaemonSetToFile() {\n    this.saveToFile('snap-daemonset', daemonSet);\n  }\n\n  saveDeploymentToFile() {\n    this.saveToFile('snap-kubestate', kubestate);\n  }\n\n  saveToFile(filename, json) {\n    const blob = new Blob([angular.toJson(json, true)], {\n      type: \"application/json;charset=utf-8\"\n    });\n    const wnd = window;\n    wnd.saveAs(blob, filename + '.json');\n  }\n\n  deploy() {\n    var question = !this.prometheusDeployed ?\n      'This action will deploy a DaemonSet to your Kubernetes cluster. It uses Intel Snap to collect health metrics. ' +\n      'Are you sure you want to deploy?' :\n      'This action will update the Config Map for the Snap DaemonSet and recreate the snapd pod on your Kubernetes cluster. ' +\n      'Are you sure you want to deploy?';\n    appEvents.emit('confirm-modal', {\n      title: 'Deploy to Kubernetes Cluster',\n      text: question,\n      yesText: \"Deploy\",\n      icon: \"fa-question\",\n      onConfirm: () => {\n        this.saveAndDeploy();\n      }\n    });\n  }\n\n  undeploy() {\n    var question = 'This action will remove the DaemonSet on your Kubernetes cluster that collects health metrics. ' +\n      'Are you sure you want to remove it?';\n\n    appEvents.emit('confirm-modal', {\n      title: 'Remove Daemonset Collector',\n      text: question,\n      yesText: \"Remove\",\n      icon: \"fa-question\",\n      onConfirm: () => {\n        this.undeployPrometheus();\n      }\n    });\n  }\n\n  saveDatasource() {\n    if (this.cluster.id) {\n      return this.backendSrv.put('/api/datasources/' + this.cluster.id, this.cluster);\n    } else {\n      return this.backendSrv.post('/api/datasources', this.cluster);\n    }\n  }\n\n  saveAndDeploy() {\n    return this.saveDatasource()\n      .then(() => {\n        return this.deployPrometheus();\n      });\n  }\n\n  generateConfigMap() {\n    var task = _.cloneDeep(snapTask);\n    task.workflow.collect.publish[0].config.prefix = \"snap.\" + slugify(this.cluster.name) + \".<%NODE%>\";\n    task.workflow.collect.publish[0].config.port = this.cluster.jsonData.port;\n    task.workflow.collect.publish[0].config.server = this.cluster.jsonData.server;\n    var cadvisor_task = _.cloneDeep(snapCadvisorTask);\n    cadvisor_task.workflow.collect.publish[0].config.prefix = \"snap.\" + slugify(this.cluster.name) + \".<%NODE%>\";\n    cadvisor_task.workflow.collect.publish[0].config.port = this.cluster.jsonData.port;\n    cadvisor_task.workflow.collect.publish[0].config.server = this.cluster.jsonData.server;\n    var cm = _.cloneDeep(configMap);\n    cm.data[\"core.json\"] = JSON.stringify(task);\n    cm.data[\"cadvisor.json\"] = JSON.stringify(cadvisor_task);\n    return cm;\n  }\n\n  generateKubestateConfigMap() {\n    var task = _.cloneDeep(kubestateSnapTask);\n    task.workflow.collect.publish[0].config.prefix = \"snap.\" + slugify(this.cluster.name);\n    task.workflow.collect.publish[0].config.port = this.cluster.jsonData.port;\n    task.workflow.collect.publish[0].config.server = this.cluster.jsonData.server;\n    var cm = _.cloneDeep(kubestateConfigMap);\n    cm.data[\"core.json\"] = JSON.stringify(task);\n    return cm;\n  }\n\n  deploySnap() {\n    if (!this.cluster || !this.cluster.id) {\n      this.alertSrv.set(\"Error\", \"Could not connect to cluster.\", 'error');\n      return;\n    }\n\n    var self = this;\n    var cm = this.generateConfigMap();\n    var kubestateCm = this.generateKubestateConfigMap();\n\n    if (!this.prometheusDeployed) {\n      return this.checkApiVersion(self.cluster.id)\n        .then(() => {\n          return this.createConfigMap(self.cluster.id, cm);\n        })\n        .then(() => {\n          return this.createConfigMap(self.cluster.id, kubestateCm);\n        })\n        .then(() => {\n          return this.createDaemonSet(self.cluster.id, daemonSet);\n        })\n        .then(() => {\n          return this.createDeployment(self.cluster.id, kubestate);\n        })\n        .catch(err => {\n          this.alertSrv.set(\"Error\", err, 'error');\n        }).then(() => {\n          this.prometheusDeployed = true;\n          this.alertSrv.set(\"Deployed\", \"Snap DaemonSet for Kubernetes metrics deployed to \" + self.cluster.name, 'success', 5000);\n        });\n    } else {\n      return self.updateSnapSettings(cm, kubestateCm);\n    }\n  }\n\n  undeploySnap() {\n    var self = this;\n    return this.deleteConfigMap(self.cluster.id, 'snap-tasks')\n      .then(() => {\n        return this.deleteConfigMap(self.cluster.id, 'snap-tasks-kubestate');\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      })\n      .then(() => {\n        return this.deleteDaemonSet(self.cluster.id);\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      })\n      .then(() => {\n        return this.deleteDeployment(self.cluster.id, 'snap-kubestate-deployment');\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      })\n      .then(() => {\n        return this.deletePods();\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      })\n      .then(() => {\n        this.prometheusDeployed = false;\n        this.alertSrv.set(\"Daemonset removed\", \"Snap DaemonSet for Kubernetes metrics removed from \" + self.cluster.name, 'success', 5000);\n      });\n  }\n\n  checkApiVersion(clusterId) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/extensions/v1beta1',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(result => {\n      if (!result.resources || result.resources.length === 0) {\n        throw \"This Kubernetes cluster does not support v1beta1 of the API which is needed to deploy automatically. \" +\n          \"You can install manually using the instructions at the bottom of the page.\";\n      }\n    });\n  }\n\n  createConfigMap(clusterId, cm) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/api/v1/namespaces/kube-system/configmaps',\n      method: 'POST',\n      data: cm,\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  createDaemonSet(clusterId, daemonSet) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/apps/v1beta2/namespaces/kube-system/daemonsets',\n      method: 'POST',\n      data: daemonSet,\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    });\n  }\n\n  deleteDaemonSet(clusterId) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/apps/v1beta2/namespaces/kube-system/daemonsets/node-exporter',\n      method: 'DELETE',\n    });\n  }\n\n  createDeployment(clusterId, deployment) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/apps/v1beta2/namespaces/kube-system/deployments',\n      method: 'POST',\n      data: deployment,\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    });\n  }\n\n  deleteDeployment(clusterId, deploymentName) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/apis/apps/v1beta2/namespaces/kube-system/deployments/' + deploymentName,\n      method: 'DELETE'\n    }).then(() => {\n      return this.backendSrv.request({\n        url: 'api/datasources/proxy/' + clusterId +\n          '/apis/apps/v1beta2/namespaces/kube-system/replicasets?labelSelector=grafanak8sapp%3Dtrue',\n        method: 'DELETE'\n      });\n    });\n  }\n\n  deleteConfigMap(clusterId, cmName) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/api/v1/namespaces/kube-system/configmaps/' + cmName,\n      method: 'DELETE'\n    });\n  }\n\n  deletePods() {\n    var self = this;\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + self.cluster.id +\n        '/api/v1/namespaces/kube-system/pods?labelSelector=grafanak8sapp%3Dtrue',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(pods => {\n      if (!pods || pods.items.length === 0) {\n        throw \"No pods found to update.\";\n      }\n\n      var promises = [];\n\n      _.forEach(pods.items, pod => {\n        promises.push(this.backendSrv.request({\n          url: 'api/datasources/proxy/' + self.cluster.id + '/api/v1/namespaces/kube-system/pods/' + pod.metadata.name,\n          method: 'DELETE',\n        }));\n      });\n\n      return this.$q.all(promises);\n    });\n  }\n\n  createService(clusterId, service) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/api/v1/namespaces/kube-system/services',\n      method: 'POST',\n      data: service,\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    });\n  }\n\n  deleteService(clusterId) {\n    return this.backendSrv.request({\n      url: 'api/datasources/proxy/' + clusterId + '/api/v1/namespaces/kube-system/services/node-exporter',\n      method: 'DELETE',\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    });\n  }\n\n  updateSnapSettings(cm, kubestateCm) {\n    var self = this;\n    return this.deleteConfigMap(self.cluster.id, 'snap-tasks')\n      .then(() => {\n        return this.createConfigMap(self.cluster.id, cm);\n      }).then(() => {\n        return this.deleteConfigMap(self.cluster.id, 'snap-tasks-kubestate');\n      }).then(() => {\n        return this.createConfigMap(self.cluster.id, kubestateCm);\n      }).then(() => {\n        return this.deletePods();\n      }).catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      }).then(() => {\n        this.alertSrv.set(\"Updated\", \"Graphite Settings in Config Map on \" + self.cluster.name + \" updated successfully\", 'success', 3000);\n      });\n  }\n\n  cancel() {\n    this.$window.history.back();\n  }\n\n  deployPrometheus() {\n    let self = this;\n    if (!this.cluster || !this.cluster.id) {\n      this.alertSrv.set(\"Error\", \"Could not connect to cluster.\", 'error');\n      return;\n    }\n    return this.checkApiVersion(self.cluster.id)\n      .then(() => {\n        return this.createConfigMap(self.cluster.id, this.generatePrometheusConfigMap());\n      })\n      .then(() => {\n        return this.createDeployment(self.cluster.id, kubestateDeployment);\n      })\n      .then(() => {\n        return this.createDaemonSet(self.cluster.id, nodeExporterDaemonSet);\n      })\n      .then(() => {\n        return this.createService(self.cluster.id, nodeExporterService);\n      })\n      .then(() => {\n        return this.createDeployment(self.cluster.id, prometheusDeployment);\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      }).then(() => {\n        this.prometheusDeployed = true;\n        this.alertSrv.set(\"Deployed\", \"Snap DaemonSet for Kubernetes metrics deployed to \" + self.cluster.name, 'success', 5000);\n      });\n  }\n\n  undeployPrometheus() {\n    var self = this;\n    return this.deleteConfigMap(self.cluster.id, 'prometheus-configmap')\n      .then(() => {\n        return this.deleteDeployment(self.cluster.id, 'kube-state-metrics');\n      })\n      .then(() => {\n        return this.deleteDeployment(self.cluster.id, 'prometheus-deployment');\n      })\n      .then(() => {\n        return this.deleteDaemonSet(self.cluster.id);\n      })\n      .then(() => {\n        return this.deleteService(self.cluster.id);\n      })\n      .then(() => {\n        return this.deletePods();\n      })\n      .catch(err => {\n        this.alertSrv.set(\"Error\", err, 'error');\n      })\n      .then(() => {\n        this.prometheusDeployed = false;\n        this.alertSrv.set(\"Daemonset removed\", \"Snap DaemonSet for Kubernetes metrics removed from \" + self.cluster.name, 'success', 5000);\n      });\n  }\n\n  generatePrometheusConfigMap() {\n    return {\n      \"apiVersion\": \"v1\",\n      \"kind\": \"ConfigMap\",\n      \"metadata\": {\n        \"name\": \"prometheus-configmap\"\n      },\n      \"data\": {\n        \"prometheus.yml\": `\n        scrape_configs:\n          - job_name: \\'kubernetes-kubelet\\'\n            scheme: https\n            tls_config:\n              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n              insecure_skip_verify: true\n            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n            kubernetes_sd_configs:\n            - role: node\n            relabel_configs:\n            - action: labelmap\n              regex: __meta_kubernetes_node_label_(.+)\n            - target_label: __address__\n              replacement: kubernetes.default.svc:443\n            - source_labels: [__meta_kubernetes_node_name]\n              regex: (.+)\n              target_label: __metrics_path__\n              replacement: /api/v1/nodes/\\${1}/proxy/metrics\n            - source_labels: [__address__]\n              regex: .*\n              target_label: kubernetes_cluster\n              replacement: ${this.cluster.name}\n          - job_name: \\'kubernetes-cadvisor\\'\n            scheme: https\n            tls_config:\n              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n              insecure_skip_verify: true\n            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n            kubernetes_sd_configs:\n            - role: node\n            relabel_configs:\n            - action: labelmap\n              regex: __meta_kubernetes_node_label_(.+)\n            - target_label: __address__\n              replacement: kubernetes.default.svc:443\n            - source_labels: [__meta_kubernetes_node_name]\n              regex: (.+)\n              target_label: __metrics_path__\n              replacement: /api/v1/nodes/\\${1}/proxy/metrics/cadvisor\n            - source_labels: [__address__]\n              regex: .*\n              target_label: kubernetes_cluster\n              replacement: ${this.cluster.name}\n          - job_name: \\'kubernetes-nodes\\'\n            scheme: https\n            tls_config:\n              ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n              insecure_skip_verify: true\n            bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\n            kubernetes_sd_configs:\n            - role: node\n            relabel_configs:\n            - action: labelmap\n              regex: __meta_kubernetes_node_label_(.+)\n            - target_label: __address__\n              replacement: kubernetes.default.svc:443\n            - source_labels: [__meta_kubernetes_node_name]\n              regex: (.+)\n              target_label: __metrics_path__\n              replacement: /api/v1/nodes/\\${1}/proxy/metrics\n            - source_labels: [__address__]\n              regex: .*\n              target_label: kubernetes_cluster\n              replacement: ${this.cluster.name}\n          - job_name: \\'kubernetes-pods\\'\n            kubernetes_sd_configs:\n            - role: pod\n            relabel_configs:\n            - action: labelmap\n              regex: __meta_kubernetes_pod_label_(.+)\n            - source_labels: [__meta_kubernetes_namespace]\n              action: replace\n              target_label: kubernetes_namespace\n            - source_labels: [__meta_kubernetes_pod_name]\n              action: replace\n              target_label: kubernetes_pod_name\n            - source_labels: [__meta_kubernetes_pod_label_grafanak8sapp]\n              regex: .*true.*\n              action: keep\n            - source_labels: [__address__]\n              regex: .*\n              target_label: kubernetes_cluster\n              replacement: ${this.cluster.name}`\n      }\n    };\n  }\n}\n\nClusterConfigCtrl.templateUrl = 'components/clusters/partials/cluster_config.html';\n\nconst raintankSnapImage = 'raintank/snap_k8s:v23';\n\nvar configMap = {\n  \"kind\": \"ConfigMap\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"snap-tasks\",\n    \"namespace\": \"kube-system\"\n  },\n  \"data\": {\n    \"core.json\": \"\",\n    \"cadvisor.json\": \"\"\n  }\n};\n\nvar kubestateConfigMap = {\n  \"kind\": \"ConfigMap\",\n  \"apiVersion\": \"v1\",\n  \"metadata\": {\n    \"name\": \"snap-tasks-kubestate\",\n    \"namespace\": \"kube-system\"\n  },\n  \"data\": {\n    \"core.json\": \"\"\n  }\n};\n\nvar snapTask = {\n  \"version\": 1,\n  \"start\": true,\n  \"schedule\": {\n    \"type\": \"simple\",\n    \"interval\": \"10s\"\n  },\n  \"max-failures\": 10,\n  \"workflow\": {\n    \"collect\": {\n      \"metrics\": {\n        \"/intel/procfs/cpu/all/*\": {},\n        \"/intel/procfs/meminfo/mem_available\": {},\n        \"/intel/procfs/meminfo/mem_available_perc\": {},\n        \"/intel/procfs/meminfo/mem_free\": {},\n        \"/intel/procfs/meminfo/mem_free_perc\": {},\n        \"/intel/procfs/meminfo/mem_total\": {},\n        \"/intel/procfs/meminfo/mem_total_perc\": {},\n        \"/intel/procfs/meminfo/mem_used\": {},\n        \"/intel/procfs/meminfo/mem_used_perc\": {},\n        \"/intel/procfs/filesystem/*/inodes_free\": {},\n        \"/intel/procfs/filesystem/*/inodes_reserved\": {},\n        \"/intel/procfs/filesystem/*/inodes_used\": {},\n        \"/intel/procfs/filesystem/*/space_free\": {},\n        \"/intel/procfs/filesystem/*/space_reserved\": {},\n        \"/intel/procfs/filesystem/*/space_used\": {},\n        \"/intel/procfs/filesystem/*/inodes_percent_free\": {},\n        \"/intel/procfs/filesystem/*/inodes_percent_reserved\": {},\n        \"/intel/procfs/filesystem/*/inodes_percent_used\": {},\n        \"/intel/procfs/filesystem/*/space_percent_free\": {},\n        \"/intel/procfs/filesystem/*/space_percent_reserved\": {},\n        \"/intel/procfs/filesystem/*/space_percent_used\": {},\n        \"/intel/procfs/iface/*/bytes_recv\": {},\n        \"/intel/procfs/iface/*/bytes_sent\": {},\n        \"/intel/procfs/iface/*/packets_recv\": {},\n        \"/intel/procfs/iface/*/packets_sent\": {},\n        \"/intel/procfs/iface/*/errs_recv\": {},\n        \"/intel/procfs/iface/*/errs_sent\": {},\n        \"/intel/iostat/device/*/%util\": {},\n        \"/intel/iostat/device/*/rkB_per_sec\": {},\n        \"/intel/iostat/device/*/wkB_per_sec\": {},\n        \"/intel/iostat/device/ALL/r_per_sec\": {},\n        \"/intel/iostat/device/ALL/w_per_sec\": {},\n        \"/intel/procfs/load/min1_rel\": {}\n      },\n      \"config\": {\n        \"/intel/procfs\": {\n          \"proc_path\": \"/proc_host\",\n          \"keep_original_mountpoint\": false\n        }\n      },\n      \"publish\": [{\n        \"plugin_name\": \"graphite\",\n        \"config\": {\n          \"prefix_tags\": \"\",\n          \"prefix\": \"\",\n          \"server\": \"\",\n          \"port\": 2003\n        }\n      }]\n    }\n  }\n};\n\nvar snapCadvisorTask = {\n  \"version\": 1,\n  \"start\": true,\n  \"schedule\": {\n    \"type\": \"streaming\",\n  },\n  \"workflow\": {\n    \"collect\": {\n      \"metrics\": {\n        \"/grafanalabs/cadvisor/container/*/*/*/cpu/total/usage\": {},\n        \"/grafanalabs/cadvisor/container/*/*/*/mem/usage\": {},\n        \"/grafanalabs/cadvisor/container/*/*/*/fs/*\": {},\n        \"/grafanalabs/cadvisor/container/*/*/*/diskio/*\": {},\n        \"/grafanalabs/cadvisor/container/*/*/*/iface/*/out_bytes\": {},\n        \"/grafanalabs/cadvisor/container/*/*/*/iface/*/in_bytes\": {},\n        \"/grafanalabs/cadvisor/container/*/*/*/tcp/*\": {},\n        \"/grafanalabs/cadvisor/container/*/*/*/tcp6/*\": {},\n      },\n      \"publish\": [{\n        \"plugin_name\": \"graphite\",\n        \"config\": {\n          \"prefix_tags\": \"\",\n          \"prefix\": \"\",\n          \"server\": \"\",\n          \"port\": 2003\n        }\n      }]\n    }\n  }\n};\n\nvar kubestateSnapTask = {\n  \"version\": 1,\n  \"start\": true,\n  \"schedule\": {\n    \"type\": \"simple\",\n    \"interval\": \"10s\"\n  },\n  \"max-failures\": 10,\n  \"workflow\": {\n    \"collect\": {\n      \"metrics\": {\n        \"/grafanalabs/kubestate/*\": {}\n      },\n      \"process\": null,\n      \"publish\": [{\n        \"plugin_name\": \"graphite\",\n        \"config\": {\n          \"prefix_tags\": \"\",\n          \"prefix\": \"\",\n          \"server\": \"\",\n          \"port\": 2003\n        }\n      }]\n    }\n  }\n};\n\nvar daemonSet = {\n  \"kind\": \"DaemonSet\",\n  \"apiVersion\": \"extensions/v1beta1\",\n  \"metadata\": {\n    \"name\": \"snap\",\n    \"namespace\": \"kube-system\",\n    \"labels\": {\n      \"daemon\": \"snapd\"\n    }\n  },\n  \"spec\": {\n    \"selector\": {\n      \"matchLabels\": {\n        \"daemon\": \"snapd\",\n        \"app\": \"snap-collector\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"name\": \"snap\",\n        \"labels\": {\n          \"daemon\": \"snapd\",\n          \"app\": \"snap-collector\"\n        }\n      },\n      \"spec\": {\n        \"volumes\": [{\n            \"name\": \"dev\",\n            \"hostPath\": {\n              \"path\": \"/dev\"\n            }\n          },\n          {\n            \"name\": \"cgroup\",\n            \"hostPath\": {\n              \"path\": \"/sys/fs/cgroup\"\n            }\n          },\n          {\n            \"name\": \"docker-sock\",\n            \"hostPath\": {\n              \"path\": \"/var/run/docker.sock\"\n            }\n          },\n          {\n            \"name\": \"fs-stats\",\n            \"hostPath\": {\n              \"path\": \"/var/lib/docker\"\n            }\n          },\n          {\n            \"name\": \"docker\",\n            \"hostPath\": {\n              \"path\": \"/usr/bin/docker\"\n            }\n          },\n          {\n            \"name\": \"proc\",\n            \"hostPath\": {\n              \"path\": \"/proc\"\n            }\n          },\n          {\n            \"name\": \"snap-tasks\",\n            \"configMap\": {\n              \"name\": \"snap-tasks\"\n            }\n          }\n        ],\n        \"containers\": [{\n          \"name\": \"snap\",\n          \"image\": raintankSnapImage,\n          \"command\": [\n            \"/usr/local/bin/start.sh\"\n          ],\n          \"args\": [\n            \"/opt/snap/sbin/snapteld\"\n          ],\n          \"ports\": [{\n            \"name\": \"snap-api\",\n            \"hostPort\": 8282,\n            \"containerPort\": 8282,\n            \"protocol\": \"TCP\"\n          }],\n          \"livenessProbe\": {\n            \"exec\": {\n              \"command\": [\n                \"/bin/bash\",\n                \"-c\",\n                \"/opt/snap/bin/snaptel task list |grep Disabled | awk 'BEGIN {err = 0} length($1) > 0 { err = 1} END {exit err}'\"\n              ]\n            },\n            initialDelaySeconds: 60\n          },\n          \"env\": [{\n              \"name\": \"PROCFS_MOUNT\",\n              \"value\": \"/proc_host\"\n            },\n            {\n              \"name\": \"NODE_NAME\",\n              \"valueFrom\": {\n                \"fieldRef\": {\n                  \"fieldPath\": \"spec.nodeName\"\n                }\n              }\n            },\n            {\n              \"name\": \"SNAP_PORT\",\n              \"value\": \"8282\"\n            },\n            {\n              \"name\": \"SNAP_URL\",\n              \"value\": \"http://localhost:8282\"\n            },\n            {\n              \"name\": \"SNAP_LOG_LEVEL\",\n              \"value\": \"3\"\n            }\n          ],\n          \"resources\": {},\n          \"volumeMounts\": [{\n              \"name\": \"cgroup\",\n              \"mountPath\": \"/sys/fs/cgroup\"\n            },\n            {\n              \"name\": \"docker-sock\",\n              \"mountPath\": \"/var/run/docker.sock\"\n            },\n            {\n              \"name\": \"fs-stats\",\n              \"mountPath\": \"/var/lib/docker\"\n            },\n            {\n              \"name\": \"docker\",\n              \"mountPath\": \"/usr/local/bin/docker\"\n            },\n            {\n              \"name\": \"proc\",\n              \"mountPath\": \"/proc_host\"\n            },\n            {\n              \"name\": \"snap-tasks\",\n              \"mountPath\": \"/opt/snap/tasks\"\n            }\n          ],\n          \"imagePullPolicy\": \"IfNotPresent\",\n          \"securityContext\": {\n            \"privileged\": true\n          }\n        }],\n        \"restartPolicy\": \"Always\",\n        \"hostNetwork\": true,\n        \"hostPID\": true\n      }\n    }\n  }\n};\n\nconst NodeExporterImage='quay.io/prometheus/node-exporter:v0.15.0';\n\nconst nodeExporterDaemonSet = {\n  \"kind\": \"DaemonSet\",\n  \"apiVersion\": \"apps/v1beta2\",\n  \"metadata\": {\n    \"name\": \"node-exporter\",\n    \"namespace\": \"kube-system\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"matchLabels\": {\n        \"daemon\": \"node-exporter\",\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"name\": \"node-exporter\",\n        \"labels\": {\n          \"daemon\": \"node-exporter\",\n        }\n      },\n      \"spec\": {\n        \"volumes\": [\n          {\n            \"name\": \"proc\",\n            \"hostPath\": {\n              \"path\": \"/proc\"\n            }\n          },\n          {\n            \"name\": \"sys\",\n            \"hostPath\": {\n              \"path\": \"/sys\"\n            }\n          }\n        ],\n        \"containers\": [{\n          \"name\": \"node-exporter\",\n          \"image\": NodeExporterImage,\n          \"args\": [\n            \"--path.procfs=/proc_host\",\n            \"--path.sysfs=/host_sys\"\n          ],\n          \"ports\": [{\n            \"name\": \"node-exporter\",\n            \"hostPort\": 9100,\n            \"containerPort\": 9100\n          }],\n          \"volumeMounts\": [{\n              \"name\": \"sys\",\n              \"readOnly\": true,\n              \"mountPath\": \"/host_sys\"\n            },\n            {\n              \"name\": \"proc\",\n              \"readOnly\": true,\n              \"mountPath\": \"/proc_host\"\n            }\n          ],\n          \"imagePullPolicy\": \"IfNotPresent\"\n        }],\n        \"restartPolicy\": \"Always\",\n        \"hostNetwork\": true,\n        \"hostPID\": true\n      }\n    }\n  }\n};\n\nconst nodeExporterService = {\n  \"apiVersion\": \"v1\",\n  \"kind\": \"Service\",\n  \"metadata\": {\n    \"labels\": {\n      \"app\": \"node-exporter\",\n      \"grafanak8sapp\": \"true\"\n    },\n    \"name\": \"node-exporter\"\n  },\n  \"spec\": {\n    \"type\": \"ClusterIP\",\n    \"clusterIP\": \"None\",\n    \"ports\": [{\n      \"name\": \"http-metrics\",\n      \"port\": 9100,\n      \"protocol\": \"TCP\"\n    }],\n    \"selector\": {\n      \"daemon\": \"node-exporter\"\n    }\n  }\n};\n\nconst kubestate = {\n  \"kind\": \"Deployment\",\n  \"apiVersion\": \"extensions/v1beta1\",\n  \"metadata\": {\n    \"name\": \"snap-kubestate-deployment\",\n    \"namespace\": \"kube-system\",\n  },\n  \"spec\": {\n    \"replicas\": 1,\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"app\": \"snap-collector\"\n        }\n      },\n      \"spec\": {\n        \"volumes\": [{\n          \"name\": \"snap-tasks\",\n          \"configMap\": {\n            \"name\": \"snap-tasks-kubestate\"\n          }\n        }],\n        \"containers\": [{\n          \"name\": \"snap\",\n          \"image\": raintankSnapImage,\n          \"ports\": [{\n            \"name\": \"snap-api\",\n            \"hostPort\": 8383,\n            \"containerPort\": 8383,\n            \"protocol\": \"TCP\"\n          }],\n          \"livenessProbe\": {\n            \"exec\": {\n              \"command\": [\n                \"/bin/bash\",\n                \"-c\",\n                \"/opt/snap/bin/snaptel task list |grep Disabled | awk 'BEGIN {err = 0} length($1) > 0 { err = 1} END {exit err}'\"\n              ]\n            },\n            initialDelaySeconds: 60\n          },\n          \"env\": [{\n              \"name\": \"SNAP_PORT\",\n              \"value\": \"8383\"\n            },\n            {\n              \"name\": \"SNAP_URL\",\n              \"value\": \"http://localhost:8383\"\n            },\n            {\n              \"name\": \"SNAP_LOG_LEVEL\",\n              \"value\": \"3\"\n            }\n          ],\n          \"resources\": {},\n          \"volumeMounts\": [{\n            \"name\": \"snap-tasks\",\n            \"mountPath\": \"/opt/snap/tasks\"\n          }],\n          \"imagePullPolicy\": \"IfNotPresent\",\n        }],\n        \"restartPolicy\": \"Always\",\n      }\n    }\n  }\n};\n\nconst prometheusImage = 'prom/prometheus:v2.0.0';\nconst kubestateImage = 'quay.io/coreos/kube-state-metrics:v1.1.0';\n\nlet prometheusDeployment = {\n  \"apiVersion\": \"apps/v1beta2\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"prometheus-deployment\",\n    \"namespace\": \"kube-system\"\n  },\n  \"spec\": {\n    \"replicas\": 1,\n    \"strategy\": {\n      \"rollingUpdate\": {\n        \"maxSurge\": 0,\n        \"maxUnavailable\": 1\n      },\n      \"type\": \"RollingUpdate\"\n    },\n    \"selector\": {\n      \"matchLabels\": {\n        \"app\": \"prometheus\",\n        \"grafanak8sapp\": \"true\"\n      }\n    },\n    \"template\": {\n      \"metadata\": {\n        \"name\": \"prometheus\",\n        \"labels\": {\n          \"app\": \"prometheus\",\n          \"grafanak8sapp\": \"true\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [{\n          \"name\": \"prometheus\",\n          \"image\": prometheusImage,\n          \"args\": [\n            '--config.file=/etc/prometheus/prometheus.yml',\n          ],\n          \"ports\": [{\n            \"name\": \"web\",\n            \"containerPort\": 9090\n          }],\n          \"env\": [],\n          \"volumeMounts\": [{\n            \"name\": \"config-volume\",\n            \"mountPath\": \"/etc/prometheus\"\n          }]\n        }],\n        \"volumes\": [{\n          \"name\": \"config-volume\",\n          \"configMap\": {\n            \"name\": \"prometheus-configmap\"\n          }\n        }]\n      }\n    }\n  }\n};\n\nlet kubestateDeployment = {\n  \"apiVersion\": \"apps/v1beta2\",\n  \"kind\": \"Deployment\",\n  \"metadata\": {\n    \"name\": \"kube-state-metrics\",\n    \"namespace\": \"kube-system\"\n  },\n  \"spec\": {\n    \"selector\": {\n      \"matchLabels\": {\n        \"k8s-app\": \"kube-state-metrics\",\n        \"grafanak8sapp\": \"true\"\n      }\n    },\n    \"replicas\": 1,\n    \"template\": {\n      \"metadata\": {\n        \"labels\": {\n          \"k8s-app\": \"kube-state-metrics\",\n          \"grafanak8sapp\": \"true\"\n        }\n      },\n      \"spec\": {\n        \"containers\": [{\n          \"name\": \"kube-state-metrics\",\n          \"image\": kubestateImage,\n          \"ports\": [{\n            \"name\": \"http-metrics\",\n            \"containerPort\": 8080\n          }],\n          \"readinessProbe\": {\n            \"httpGet\": {\n              \"path\": \"/healthz\",\n              \"port\": 8080\n            },\n            \"initialDelaySeconds\": 5,\n            \"timeoutSeconds\": 5\n          }\n        }]\n      }\n    }\n  }\n};\n"]}